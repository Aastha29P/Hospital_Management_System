/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import system.Person;
import system.personDirectory;

/**
 *
 * @author parth
 */
public class ReadPersonJPanel extends javax.swing.JPanel {

    Person person;
    personDirectory personHistory;
    public ReadPersonJPanel(personDirectory personHistory) {
        initComponents();
        this.personHistory= personHistory;
        person = new Person();
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbPerTitle = new javax.swing.JLabel();
        lbPerComm = new javax.swing.JLabel();
        lbPerId = new javax.swing.JLabel();
        txtPerComm = new javax.swing.JTextField();
        txtPerId = new javax.swing.JTextField();
        lbPerName = new javax.swing.JLabel();
        txtPerName = new javax.swing.JTextField();
        lbPerAge = new javax.swing.JLabel();
        txtPerAge = new javax.swing.JTextField();
        lbPerGen = new javax.swing.JLabel();
        txtPerGen = new javax.swing.JTextField();
        lbPerHouse = new javax.swing.JLabel();
        txtPerHouse = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        pTable = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        lbPerTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbPerTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPerTitle.setText("Person");

        lbPerComm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPerComm.setText("Community");

        lbPerId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPerId.setText(" Id");

        txtPerComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerCommActionPerformed(evt);
            }
        });

        lbPerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPerName.setText("Name");

        txtPerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerNameActionPerformed(evt);
            }
        });

        lbPerAge.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPerAge.setText("Age");

        txtPerAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerAgeActionPerformed(evt);
            }
        });

        lbPerGen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPerGen.setText("Gender");

        txtPerGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerGenActionPerformed(evt);
            }
        });

        lbPerHouse.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPerHouse.setText("House");

        txtPerHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerHouseActionPerformed(evt);
            }
        });

        pTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Age", "Gender", "House", "Community"
            }
        ));
        jScrollPane1.setViewportView(pTable);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lbPerTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lbPerComm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbPerId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbPerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbPerAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbPerGen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbPerHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnView)
                                        .addGap(59, 59, 59)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnUpdate)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtPerName)
                                                .addComponent(txtPerAge, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtPerGen, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtPerHouse, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtPerComm, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtPerId, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(46, 46, 46))
                                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(227, 227, 227))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbPerTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbPerId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbPerName, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbPerAge, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbPerGen, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbPerHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbPerComm, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(txtPerComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPerAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPerGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPerHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPerCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerCommActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerCommActionPerformed

    private void txtPerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerNameActionPerformed

    private void txtPerAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerAgeActionPerformed

    private void txtPerGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerGenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerGenActionPerformed

    private void txtPerHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerHouseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerHouseActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = pTable.getSelectedRow();

        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) pTable.getModel();
        Person selectedPerson = (Person)model.getValueAt(selectedRowIndex, 0);

        txtPerId.setText(String.valueOf(selectedPerson.getPerId()));
        txtPerName.setText(selectedPerson.getName());
        txtPerAge.setText(String.valueOf(selectedPerson.getAge()));
        txtPerGen.setText(selectedPerson.getGender());
        txtPerHouse.setText(selectedPerson.getHouse());
        txtPerComm.setText(selectedPerson.getCommunity());
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = pTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) pTable.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex, 0);

        int perId = Integer.parseInt(txtPerId.getText());
        String perName = txtPerName.getText();
        int perAge = Integer.parseInt(txtPerAge.getText());
        String perGen = txtPerGen.getText();
        String perHouse = txtPerHouse.getText();
        String perComm = txtPerComm.getText();

        JOptionPane.showMessageDialog(this, "Employee Information Updated");
        //history.deleteEmployee(selectedEmployee);
        selectedPerson.setPerId(perId);
        selectedPerson.setName(perName);
        selectedPerson.setAge(perAge);
        selectedPerson.setGender(perGen);
        selectedPerson.setHouse(perHouse);
        selectedPerson.setCommunity(perComm);
                
        populateTable();
        
        txtPerId.setText("");
        txtPerName.setText("");
        txtPerAge.setText("");
        txtPerGen.setText("");
        txtPerHouse.setText("");
        txtPerComm.setText("");
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = pTable.getSelectedRow();

        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) pTable.getModel();
        Person selectedPerson = (Person)model.getValueAt(selectedRowIndex, 0);

        personHistory.deletePerson(selectedPerson);
        JOptionPane.showMessageDialog(this, "Employee deleted");

        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbPerAge;
    private javax.swing.JLabel lbPerComm;
    private javax.swing.JLabel lbPerGen;
    private javax.swing.JLabel lbPerHouse;
    private javax.swing.JLabel lbPerId;
    private javax.swing.JLabel lbPerName;
    private javax.swing.JLabel lbPerTitle;
    private javax.swing.JTable pTable;
    private javax.swing.JTextField txtPerAge;
    private javax.swing.JTextField txtPerComm;
    private javax.swing.JTextField txtPerGen;
    private javax.swing.JTextField txtPerHouse;
    private javax.swing.JTextField txtPerId;
    private javax.swing.JTextField txtPerName;
    // End of variables declaration//GEN-END:variables

private void populateTable() {
            DefaultTableModel model = (DefaultTableModel) pTable.getModel();
            model.setRowCount(0);

            for(Person e: personHistory.getPersonHistory()){

                Object[] row = new Object[8];
                row[0] = e;
                row[1] = e.getPerId();
                row[2] = e.getName();
                row[3] = e.getAge();
                row[4] = e.getGender();
                row[5] = e.getHouse();
                row[6] = e.getCommunity();

                model.addRow(row);
            }
        }
}
