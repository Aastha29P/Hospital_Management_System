/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import javax.swing.JOptionPane;
import system.Encounter1;
import system.encounterHistory;
import system.vitalSHistory;
import system.vitalSigns;

public class CreateEncounterJPanel extends javax.swing.JPanel {

    encounterHistory encHistory;
    vitalSHistory vsHistory;
    public CreateEncounterJPanel(encounterHistory encHistory, vitalSHistory vsHistory ) {
        initComponents();
        
        this.encHistory = encHistory;
        this.vsHistory = vsHistory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbRepId = new javax.swing.JLabel();
        txtRepId = new javax.swing.JTextField();
        lbDocId = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        lbDocId1 = new javax.swing.JLabel();
        txtDocName = new javax.swing.JTextField();
        txtHospId = new javax.swing.JTextField();
        PatName = new javax.swing.JLabel();
        lbDate = new javax.swing.JLabel();
        txtPatName = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        lbHospId1 = new javax.swing.JLabel();
        lbBodytemp = new javax.swing.JLabel();
        txtHospName = new javax.swing.JTextField();
        txtDocId = new javax.swing.JTextField();
        txtBodytemp = new javax.swing.JTextField();
        PatId = new javax.swing.JLabel();
        lbPulserate = new javax.swing.JLabel();
        txtPatId = new javax.swing.JTextField();
        txtPulserate = new javax.swing.JTextField();
        lbHospId = new javax.swing.JLabel();
        lbResprate = new javax.swing.JLabel();
        txtBp = new javax.swing.JTextField();
        txtResprate = new javax.swing.JTextField();
        lbTitle1 = new javax.swing.JLabel();
        lbBp = new javax.swing.JLabel();
        lbTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));

        lbRepId.setForeground(new java.awt.Color(255, 255, 255));
        lbRepId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbRepId.setText("Report Id");

        lbDocId.setForeground(new java.awt.Color(255, 255, 255));
        lbDocId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDocId.setText("Doctor Id");

        btnSave.setBackground(new java.awt.Color(204, 204, 204));
        btnSave.setText("Save ");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lbDocId1.setForeground(new java.awt.Color(255, 255, 255));
        lbDocId1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDocId1.setText("Doctor Name");

        txtDocName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocNameActionPerformed(evt);
            }
        });

        txtHospId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHospIdActionPerformed(evt);
            }
        });

        PatName.setForeground(new java.awt.Color(255, 255, 255));
        PatName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PatName.setText("Patient Name");

        lbDate.setForeground(new java.awt.Color(255, 255, 255));
        lbDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDate.setText("Date");

        txtPatName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatNameActionPerformed(evt);
            }
        });

        lbHospId1.setForeground(new java.awt.Color(255, 255, 255));
        lbHospId1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbHospId1.setText("Hospital Name");

        lbBodytemp.setForeground(new java.awt.Color(255, 255, 255));
        lbBodytemp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbBodytemp.setText("Body Temperature");

        txtHospName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHospNameActionPerformed(evt);
            }
        });

        txtDocId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocIdActionPerformed(evt);
            }
        });

        txtBodytemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBodytempActionPerformed(evt);
            }
        });

        PatId.setForeground(new java.awt.Color(255, 255, 255));
        PatId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PatId.setText("Patient Id");

        lbPulserate.setForeground(new java.awt.Color(255, 255, 255));
        lbPulserate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPulserate.setText("Pulse Rate");

        txtPatId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatIdActionPerformed(evt);
            }
        });

        txtPulserate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPulserateActionPerformed(evt);
            }
        });

        lbHospId.setForeground(new java.awt.Color(255, 255, 255));
        lbHospId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbHospId.setText("Hospital Id");

        lbResprate.setForeground(new java.awt.Color(255, 255, 255));
        lbResprate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbResprate.setText("Respiration Rate");

        txtBp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBpActionPerformed(evt);
            }
        });

        txtResprate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResprateActionPerformed(evt);
            }
        });

        lbTitle1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle1.setText("Vital Signs Form");

        lbBp.setForeground(new java.awt.Color(255, 255, 255));
        lbBp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbBp.setText("Blood Pressure");

        lbTitle.setFont(new java.awt.Font("Century", 1, 24)); // NOI18N
        lbTitle.setForeground(new java.awt.Color(0, 204, 255));
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("Encounter Form");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lbTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(33, 33, 33))
            .addComponent(lbTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbRepId, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                    .addComponent(lbDocId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PatId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbDocId1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDocName, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtRepId, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                        .addComponent(txtDocId)
                                        .addComponent(txtPatId))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbHospId1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtHospName, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbHospId, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(txtHospId, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(17, 17, 17)
                                    .addComponent(txtDate))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(PatName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtPatName, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbBodytemp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbPulserate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbResprate, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtBodytemp)
                                    .addComponent(txtPulserate)
                                    .addComponent(txtResprate, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lbBp, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(txtBp, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(176, 176, 176))
            .addGroup(layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRepId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbRepId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDocId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDocId, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDocId1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDocName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PatId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PatName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHospId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbHospId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHospName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbHospId1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbTitle1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBodytemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBodytemp, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPulserate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPulserate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtResprate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbResprate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBp, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(btnSave)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        boolean isValid = Validation();
        if (isValid) {
        int reportId = Integer.parseInt(txtRepId.getText());
        int docId = Integer.parseInt(txtDocId.getText());
        String docName = txtDocName.getText();
        int patId = Integer.parseInt(txtPatId.getText());
        String patName = txtPatName.getText();
        int hospId = Integer.parseInt(txtHospId.getText());
        String hospName = txtHospName.getText();
        String date = txtDate.getText();
        float bodyTemp = Float.parseFloat(txtBodytemp.getText());
        int pulseRate = Integer.parseInt(txtPulserate.getText());
        int respRate = Integer.parseInt(txtResprate.getText());
        int bP = Integer.parseInt(txtBp.getText());

        vitalSigns v = vsHistory.addNewVs();
        Encounter1 e = encHistory.addNewEncounter();

        e.setRepId(reportId);
        e.setDocId(docId);
        e.setDocName(docName);
        e.setPatId(patId);
        e.setPatName(patName);
        e.setHospId(hospId);
        e.setHospName(hospName);
        e.setDate(date);

        v.setBodyTemp(bodyTemp);
        v.setPulseRate(pulseRate);
        v.setRespRate(respRate);
        v.setbP(bP);

        JOptionPane.showMessageDialog(this, "New Vital Signs are added.");

        txtRepId.setText("");
        txtDocId.setText("");
        txtDocName.setText("");
        txtPatId.setText("");
        txtPatName.setText("");
        txtHospId.setText("");
        txtHospName.setText("");
        txtDate.setText("");
        txtBodytemp.setText("");
        txtPulserate.setText("");
        txtResprate.setText("");
        txtBp.setText("");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtDocNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocNameActionPerformed

    private void txtHospIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHospIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHospIdActionPerformed

    private void txtPatNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatNameActionPerformed

    private void txtHospNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHospNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHospNameActionPerformed

    private void txtDocIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocIdActionPerformed

    private void txtBodytempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBodytempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBodytempActionPerformed

    private void txtPatIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatIdActionPerformed

    private void txtPulserateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPulserateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPulserateActionPerformed

    private void txtBpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBpActionPerformed

    private void txtResprateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResprateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtResprateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PatId;
    private javax.swing.JLabel PatName;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lbBodytemp;
    private javax.swing.JLabel lbBp;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbDocId;
    private javax.swing.JLabel lbDocId1;
    private javax.swing.JLabel lbHospId;
    private javax.swing.JLabel lbHospId1;
    private javax.swing.JLabel lbPulserate;
    private javax.swing.JLabel lbRepId;
    private javax.swing.JLabel lbResprate;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbTitle1;
    private javax.swing.JTextField txtBodytemp;
    private javax.swing.JTextField txtBp;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDocId;
    private javax.swing.JTextField txtDocName;
    private javax.swing.JTextField txtHospId;
    private javax.swing.JTextField txtHospName;
    private javax.swing.JTextField txtPatId;
    private javax.swing.JTextField txtPatName;
    private javax.swing.JTextField txtPulserate;
    private javax.swing.JTextField txtRepId;
    private javax.swing.JTextField txtResprate;
    // End of variables declaration//GEN-END:variables
private boolean Validation() {
        
        if (txtRepId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Report ID");
            return false;
        } else {
            if (txtRepId.getText().length() != 5) {
                JOptionPane.showMessageDialog(this, "Report ID should be only 5 digits");
                return false;
            }
        }
        try {
        Integer.parseInt(txtRepId.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for Id");
            
        }
        
        try {
        Integer.parseInt(txtDocId.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for Doctor Id");
            
        }
        

        if (txtDocId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Doctor ID");
            return false;
        } else {
            if (txtDocId.getText().length() != 3) {
                JOptionPane.showMessageDialog(this, "Doctor ID should be only 3 digits");
                return false;
            }
        }
        
        if (txtDocName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Doctor Name");
            return false;
        } else {
            if (!(txtDocName.getText().matches("[a-zA-Z]*[\\s]{1}[a-zA-Z].*"))) {
                JOptionPane.showMessageDialog(this, "Please enter Valid Doctor Name");
                return false;
            }
        }
        
        if (txtPatId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Patient ID");
            return false;
        } else {
            if (txtPatId.getText().length() != 4) {
                JOptionPane.showMessageDialog(this, "Patient ID should be only 4 digits");
                return false;
            }
        }
        
        try {
        Integer.parseInt(txtPatId.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for Patient Id");
            
        }
        
        
        if (txtPatName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Patient Name");
            return false;
        } else {
            if (!(txtPatName.getText().matches("[a-zA-Z]*[\\s]{1}[a-zA-Z].*"))) {
                JOptionPane.showMessageDialog(this, "Please enter Valid Patient Name");
                return false;
            }
        }
        
        if (txtHospId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Hospital ID");
            return false;
        } else {
            if (txtHospId.getText().length() != 1) {
                JOptionPane.showMessageDialog(this, "Hospital ID should be only 1 digit");
                return false;
            }
        }
        
        try {
        Integer.parseInt(txtHospId.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for Hospital Id");
            
        }
        
        if (txtHospName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Hospital Name");
            return false;
        } else {
            if (!(txtHospName.getText().matches("[a-zA-Z]*[\\s]{1}[a-zA-Z].*"))) {
                JOptionPane.showMessageDialog(this, "Please enter Valid Hospital Name");
                return false;
            }
        }
        
        if (txtDate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Date");
            return false;
        } else {
            if (!(txtDate.getText().matches("^(1[0-2]|0[1-9])/(3[01]|[12][0-9]|0[1-9])/[0-9]{4}$"))) {
                JOptionPane.showMessageDialog(this, "Please enter Date Format mm/dd/yyyy");
                return false;
            }
        }
        
        try {
        Integer.parseInt(txtBodytemp.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for Body Temperature");
            
        }
        
        if (txtBodytemp.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Patient Body Temperature");
            return false;
        }
                 
        try {
        Integer.parseInt(txtPulserate.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for Pulse rate");
            
        }
        
        if (txtPulserate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Patient Pulse rate");
            return false;
        }   
        
        try {
        Integer.parseInt(txtResprate.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for Respiration rate");
            
        }
        
        if (txtResprate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Patient Respiration rate");
            return false;
        }
        
        try {
        Integer.parseInt(txtBp.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter a numerical value for BP");
            
        }
        
        if (txtBp.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Patient BP");
            return false;
        }
              
        return true;
    } 
}
